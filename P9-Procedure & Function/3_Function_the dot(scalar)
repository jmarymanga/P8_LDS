// 1) Read size

FUNCTION read_size(n) :INTEGER 
VAR
  n :INTEGER; 
BEGIN
  REPEAT
    Read(n);
  UNTIL(n<=0 OR n > 25)
  RETURN n ;
END

// 2) Read array

FUNCTION read_array(n,V1,V2) :INTEGER, ARRAY_OF INTEGER

VAR
  n :INTEGER;
BEGIN
  FOR i FROM 0 TO n-1 DO
    Write("put value ",i+1," of V1");
    Read(V1[i]);
    Write("put value ",i+1," of V2");
    Read(V2[i]);
  END_FOR 
  RETURN V1[i], V2[i];
END

// 3) Create funtion DotProduct

FUNCTION dot_product(V1[],V2[] : ARRAY_OF INTEGER)
VAR
    product := 0;
BEGIN
    FOR i FROM 0 TO n-1 DO
      product = product + V1[i] * V2[i];
  END_FOR
    RETURN(product);
END

// 4) Algo dot_product

ALGORITHM dot_product_V1_V2_orthogonal
VAR
   v : ARRAY_OF INTEGER[25];
   n : INTEGER;
BEGIN
  // Read size
  n := read_size();
  // Read 
  read_array(n,V1,V2);
  //call FUNCTION dot_product
  Write("The dot(scalar) product of v1 and v2 is ", dot_product(V1,V2));
END